:root {
  --minimumColumnWidth: 150px;
}
.outer-card-container {
  display: flex;
  flex-direction: column;
  padding: 1rem;
  border: 1px solid gray;
  min-height: 100vh;
}

.card-container {
  grid-gap: 24px;
  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(var(--minimumColumnWidth), 1fr)
  );
  /* border: 1px solid gray; */
  padding: 1rem;
  grid-template-rows: minmax(150px, auto);
}

.card-body {
  /* border: 1px solid red; */
  display: flex;
  justify-content: center;
  flex-direction: column;
  padding: 1rem;
  background-color: #191919;
  transition: background-color 200ms ease-in-out;
  border-radius: 0.2rem;
}
.card-image-container {
  margin-bottom: 2rem;
  display: flex;
  justify-content: center;
}
.card-image {
  max-width: 140px;
  height: auto;
  border-radius: 0.2rem;
}

.card-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding-left: 3px;
}

.card-title {
  margin-bottom: 1rem;
  font-weight: 700;
  color: white;
}

.card-subtitle {
  color: #b3b3b3;
  font-size: smaller;
}

.card-body:hover {
  /* cursor: pointer; */
  background-color: #101010;
}

.plain-card-container {
  grid-gap: 24px;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  /* border: 1px solid gray; */
  padding: 1rem;
  grid-template-rows: minmax(180px, auto);
  /* The next rows that will be generated will be set to inimum of 180px and shall expand depending upon the content in it.Thus we use grid-auto-rows */
  grid-auto-rows: minmax(180px, auto);
}

.plain-card-fallback-body {
  background-color: #2b2a2a;
  position: relative;
  overflow: hidden;
  border-radius: 0.8rem;
}

.chakde {
  background-color: #eb1e32;
}

.sleep {
  background-color: #1e3264;
}

.barbie {
  background-color: #098a67;
}

.plain-card-fallback-image {
  position: absolute;
  width: 95px;
  height: 95px;
  top: 40%;
  left: 40%;
  transform: rotate(25deg) translate(31px, 14px);
  background-color: #7f7f7f;
}

.plain-card-title {
  padding: 1rem;
}

/* Horizontal Card */
.card-horizontal {
  padding: 1rem;
}

.card-horizontal-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  grid-template-rows: minmax(80px, auto);
  grid-auto-rows: minmax(80px, auto);
  gap: 24px;
}
.card-horizontal-body {
  background-color: #2b2a2a;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  height: 80px;
  transition: background-color 200ms ease-in-out;
  cursor: pointer;
  overflow: hidden;
  border-radius: 0.2rem;
}

.card-horizontal-image-container {
  max-width: 80px;
}
.card-horizontal-image {
  width: 100%;
  height: 100%;
  border-radius: 0.2rem;
}

.card-horizontal-content {
  padding: 1rem;
  display: flex;
  flex-direction: column;
  color: #b3b3b3;
  font-weight: 400;
  font-size: small;
}
.card-horizontal-title {
  margin-bottom: 0.5rem;
}
.play-button {
  position: relative;
  height: 30px;
  width: 30px;
  background-color: #1db954;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  align-self: center;
  margin-right: 10px;
  visibility: hidden;
  transition: visibility 300ms ease-in-out;
  /* box-shadow: 0 8px 8px rgba(0, 0, 0, 0.3); */
}

.fas.fa-play {
  font-size: x-small;
}

.card-horizontal-body:hover {
  background-color: black;
}
.card-horizontal-body:hover .play-button {
  visibility: visible;
  -webkit-animation: slide-top 0.3s cubic-bezier(0.39, 0.575, 0.565, 1) both;
  animation: slide-top 0.3s cubic-bezier(0.39, 0.575, 0.565, 1) both;
}

@-webkit-keyframes slide-top {
  0% {
    -webkit-transform: translateY(100px);
    transform: translateY(100px);
  }
  100% {
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}
@keyframes slide-top {
  0% {
    -webkit-transform: translateY(100px);
    transform: translateY(100px);
  }
  100% {
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}

@media only screen and (max-width: 768px) {
  .card-image {
    max-width: 100%;
  }
  .plain-card-fallback-image {
    transform: rotate(15deg) translate(61px, 4px);
  }
}
